<<<<<<< HEAD
import numpy as np

class MultiArmedBandit:
    def __init__(self, k, epsilon):
        self.k = k
        self.epsilon = epsilon
        self.counts = np.zeros(k)
        self.values = np.zeros(k)

    def select_action(self):
        if np.random.rand() < self.epsilon:
            return np.random.choice(self.k)
        else:
            return np.argmax(self.values)

    def update(self, action, reward):
        self.counts[action] += 1
        self.values[action] += (reward - self.values[action]) / self.counts[action]

bandit = MultiArmedBandit(k=5, epsilon=0.1)
action = bandit.select_action()
bandit.update(action, reward=1.0)
=======
import numpy as np

class MultiArmedBandit:
    def __init__(self, k, epsilon):
        self.k = k
        self.epsilon = epsilon
        self.counts = np.zeros(k)
        self.values = np.zeros(k)

    def select_action(self):
        if np.random.rand() < self.epsilon:
            return np.random.choice(self.k)
        else:
            return np.argmax(self.values)

    def update(self, action, reward):
        self.counts[action] += 1
        self.values[action] += (reward - self.values[action]) / self.counts[action]

bandit = MultiArmedBandit(k=5, epsilon=0.1)
action = bandit.select_action()
bandit.update(action, reward=1.0)
>>>>>>> 21efe1b304df64857a2f6eefed48b3c39ac77c1c
